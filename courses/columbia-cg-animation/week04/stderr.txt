In file included from /home/codio/workspace/include/eigen/Eigen/Core:234:0,
                 from /home/codio/workspace/FOSSSim/PenaltyForce.h:4,
                 from /home/codio/workspace/FOSSSim/PenaltyForce.cpp:1:
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
/home/codio/workspace/FOSSSim/TwoDScene.h:97:12:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
In file included from /home/codio/workspace/include/eigen/Eigen/Core:234:0,
                 from /home/codio/workspace/FOSSSim/TwoDScene.h:4,
                 from /home/codio/workspace/FOSSSim/CollisionHandler.h:4,
                 from /home/codio/workspace/FOSSSim/SimpleCollisionHandler.h:1,
                 from /home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:1:
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
/home/codio/workspace/FOSSSim/TwoDScene.h:97:12:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/VectorBlock.h:66:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, 2>’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:31:38:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:37:21:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 2, 1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, 2, 1>’
/home/codio/workspace/FOSSSim/CollisionHandler.h:38:14:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:46:60:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:102:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:63:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/FOSSSim/CollisionHandler.h:22:111:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Transpose<Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:85:34:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:85:38:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/VectorBlock.h:66:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, 2>’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:30:49:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:36:12:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:213:63:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:46:34:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:84:41:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:227:56:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:47:34:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:84:41:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:38:27:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:94:48:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:164:87:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:130:9:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:41:20:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:122:25:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:58:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:166:100:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:130:9:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:41:20:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:214:38:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:81:36:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:81:53:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 1, 2> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 1, 2> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, 1, 2> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, 1, 2>’
/home/codio/workspace/include/eigen/Eigen/src/Core/IO.h:245:62:   required from ‘std::ostream& Eigen::operator<<(std::ostream&, const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Transpose<Eigen::Matrix<double, 2, 1> >; std::ostream = std::basic_ostream<char>]’
/home/codio/workspace/FOSSSim/CollisionHandler.h:22:111:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 1, 2> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:227:56:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:164:30:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:213:63:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:169:30:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:37:29:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::Matrix<double, 2, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:43:38:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:79:41:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >; U = Eigen::Matrix<double, 2, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:94:56:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:164:87:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:130:9:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:120:18:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:58:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:166:100:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:130:9:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:120:18:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:122:23:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>; U = Eigen::Matrix<double, 2, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:129:51:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>, Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:209:35:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:130:17:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:120:18:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
